@startuml
title Example for IndirectRelations
'This file is generated by the GenerateExamplesForDoc test.

    'person.Age
    class "Age" as person_Age {
        + value : Int
    }


    'person.Name
    class "Name" as person_Name {
        + firstName : String
		+ secondName : String
    }


    'person.Company
    interface "Company" as person_Company {
        + name : String
    }


    'person.Job
    class "Job" as person_Job {
        
    }


    'person.Date
    class "Date" as person_Date {
        + day : Int
		+ month : Int
		+ year : Int
    }


    'person.Person
    class "Person" as person_Person {
        + birthday : Date
		+ name : Name
		+ peopleIKnow : List<Name>
		+ job : Job<Company>
		+ computeAge() : Result<Age>
    }


person_Person --* person_Date
person_Person --* person_Name
person_Person --* person_Job
person_Person ..* person_Company
person_Person ..> person_Age

note as note_of_code
Kotlin Code:

    package person
    class Age(val value: Int)
    class Name(val firstName: String, val secondName: String)
    interface Company {
        val name: String
    }
    
    class Job<T : Company>()
    class Date(val day: Int, val month: Int, val year: Int)
    class Person(val birthday: Date, val name: Name, val peopleIKnow: List<Name>, val job: Job<Company>) {
        fun computeAge(): Result<Age> {
            return Result.success(Age(2025 - birthday.year))
        }
    }
    
end note

@enduml
